	<!-- 配置不需要安全管理的界面 -->
	<http pattern="/web/css/**" security="none" />
	<http pattern="/web/js/**" security="none" />
	<http pattern="/user/js/**" security="none" />
	<http pattern="/resource/js/**" security="none" />
	<http pattern="/resource/css/**" security="none" />
	<http pattern="/user/images/**" security="none" />
	<http pattern="/user/style/**" security="none" />
	<http pattern="/web/images/**" security="none" />
	<http pattern="/login.jsp" security="none" />
	<http pattern="/noImpower.jsp" security="none" />
     
    <!-- 当用户出现错误时的页面 -->
    <http use-expressions='true' entry-point-ref="userAuthenticationEntryPoint" access-denied-page="/noImpower.jsp">

        <!-- 会话管理 -->
        <session-management invalid-session-url="/timeout.jsp">
            <concurrency-control max-sessions="10" error-if-maximum-exceeded="true" />
        </session-management>

        <!-- 认证和授权 -->
        <custom-filter ref="userAuthenticationFilter" position="FORM_LOGIN_FILTER"  />
        <custom-filter ref="userAuthorizationFilter" before="FILTER_SECURITY_INTERCEPTOR"/>
        
        <!-- 登出管理 -->
        <logout invalidate-session="true" logout-url="/j_spring_security_logout" />
    </http>
    
    <!-- 未登录的切入点 -->
    <beans:bean id="userAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <beans:property name="loginFormUrl" value="/login.jsp"></beans:property>
    </beans:bean>

    <!-- 登录验证器：用户有没有登录的资格 -->
    <beans:bean id="userAuthenticationFilter" class="com.whut.web.security.UserAuthenticationFilter">
        <beans:property name="authenticationManager" ref="userAuthenticationManager" />
        <beans:property name="filterProcessesUrl" value="/j_spring_security_check" />
        <beans:property name="authenticationSuccessHandler">
            <beans:bean class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
                <beans:property name="defaultTargetUrl" value="/user/user_login.action" />
            </beans:bean>
        </beans:property>
        <beans:property name="authenticationFailureHandler">
            <beans:bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
                <beans:property name="defaultFailureUrl" value="/login.jsp" />
            </beans:bean>
        </beans:property>
        <beans:property name="us" ref="us" />
    </beans:bean>
    

    <!-- 用户拥有的权限：登录后取得用户所保有的权限信息 -->
    <authentication-manager alias="userAuthenticationManager">
        <authentication-provider user-service-ref="userDetailService" />
    </authentication-manager>

    <!-- 认证过滤器 -->
    <beans:bean id="userAuthorizationFilter" class="com.whut.web.security.MyAuthorizationFilter">
        <!-- 用户拥有的权限 -->
        <beans:property name="authenticationManager" ref="userAuthenticationManager" />
        <!-- 用户是否拥有所请求资源的权限 -->
        <beans:property name="accessDecisionManager">
            <beans:bean class="com.whut.web.security.UserAccessDecisionManager" />
        </beans:property>
        <!-- 资源与权限对应关系 -->
        <beans:property name="securityMetadataSource">
            <beans:bean class="com.whut.security.SecurityMetadataSourceServiceImpl" />
        </beans:property>
    </beans:bean>
    
    
    	
	<!-- share context with spring security -->
	<import resource="applicationContext-security.xml" />
	
	
	    <!-- declare transaction proxy -->
    <bean id="transactionProxy" 
    	  class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
          lazy-init="true" abstract="true">
        <property name="transactionManager" ref="transactionManager" />
        <property name="transactionAttributes">
            <props>
                <prop key="add*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="insert*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="modify*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="delete*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="del*">PROPAGATION_REQUIRED,-Exception</prop>
                <prop key="get*">PROPAGATION_NEVER</prop>
                <prop key="load*">PROPAGATION_NEVER</prop>
            </props>
        </property>
    </bean>